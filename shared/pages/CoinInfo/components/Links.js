import React, { Component } from 'react';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { Row, Col, Modal, ModalHeader, ModalBody } from 'reactstrap';
import AddCoin from 'pages/Portfolios/components/AddCoin';
import { isClient } from 'utils/env/index';

class Links extends Component {
  constructor(props) {
    super(props);
    this.state = {
      showAddCoinModal: false,
    };
    this._toggleShowCoinModal = this._toggleShowCoinModal.bind(this);
  }

  _toggleShowCoinModal() {
    if (isClient() && !this.props.user) {
      this.props.history.push('/portfolio');
    } else {
      document
        .getElementsByTagName('body')[0]
        .classList.toggle('background-overflow');
      this.setState({
        showAddCoinModal: !this.state.showAddCoinModal,
      });
    }
  }

  render() {
    const selected = {
      id: this.props.id,
      symbol: this.props.symbol,
    };
    return (
      <div className="coin-info-header-block d-flex align-items-center">
        <div className="coin-info-header-links">
          <Row>
            <Col xs={6}>
              <div className="coin-info-row-param mr-3">
                <span className="link-img links-color">
                  <svg width="13" height="14" viewBox="0 0 13 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M12.2266 0.548131C10.3741 1.953 7.97506 1.29271 5.64553 0.660521C3.58461 0.0985747 1.63947 -0.430591 0.208408 0.534083C0.0787317 0.620248 0.000926256 0.765885 0 0.922762V13.4381C0 13.7485 0.2487 14 0.555753 14C0.862807 14 1.11151 13.7485 1.11151 13.4381V9.54863C2.19986 9.12249 3.7606 9.54863 5.4047 9.9935C6.75657 10.4234 8.15707 10.6753 9.57285 10.7428C10.7348 10.7793 11.8765 10.4215 12.8147 9.72658C12.9315 9.63807 13 9.49946 13 9.35195V0.922762C12.9935 0.738725 12.881 0.57576 12.7129 0.505985C12.5559 0.42544 12.3674 0.44183 12.2266 0.548131Z"
                    />
                  </svg>
                  Rank: {this.props.rank}
                </span>
              </div>
              <div className="coin-info-row-param mr-3">
                <a
                  className="links-color"
                  href={this.props.webSite}
                  target="_blank"
                >
                  <span className="link-img">
                    <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path
                        fillRule="evenodd"
                        fillOpacity="0.35"
                        clipRule="evenodd"
                        d="M4.11963 3.45819C4.521 1.98846 5.15503 0.82132 5.93652 0.151291C6 0.0864563 5.95776 0 5.87329 0C4.24634 0.389053 2.83105 1.27521 1.79565 2.50719C1.75342 2.55042 1.77466 2.61526 1.81689 2.63687C2.40845 3.0043 3.16895 3.3069 4.01416 3.52304C4.0564 3.54465 4.09863 3.50142 4.11963 3.45819ZM7.18311 0.302673V3.86894C7.18311 3.91217 7.14087 3.9554 7.09839 3.9554C6.29565 3.93378 5.53516 3.84732 4.81689 3.71765C4.77466 3.71765 4.73218 3.6528 4.75342 3.60957C5.2605 1.79402 6.10547 0.518814 7.07739 0.216217C7.14087 0.194611 7.18311 0.237839 7.18311 0.302673ZM10.6689 7.17578H7.90137C7.85913 7.17578 7.81689 7.13255 7.81689 7.08932V4.69022C7.81689 4.64699 7.85913 4.60376 7.90137 4.60376C8.76758 4.58214 9.59155 4.49568 10.3521 4.34439C10.3943 4.34439 10.4365 4.366 10.4365 4.40923C10.6265 5.23056 10.7322 6.13834 10.7534 7.08932C10.7534 7.13255 10.7112 7.17578 10.6689 7.17578ZM7.18311 7.08936V4.69025C7.18311 4.64702 7.14087 4.60379 7.09863 4.60379C6.23242 4.58217 5.40845 4.49571 4.64795 4.34442C4.60571 4.34442 4.56348 4.36603 4.56348 4.40926C4.39453 5.23059 4.28882 6.13837 4.24658 7.08936C4.24658 7.13258 4.28882 7.17581 4.33105 7.17581H7.09863C7.14087 7.17581 7.18311 7.13258 7.18311 7.08936ZM7.81689 3.86894V0.302673C7.81689 0.237839 7.85913 0.194611 7.92261 0.216217C8.89429 0.518814 9.7395 1.79402 10.2466 3.60957C10.2676 3.6528 10.2253 3.71765 10.1831 3.71765C9.46484 3.84732 8.7041 3.93378 7.90137 3.9554C7.85913 3.9554 7.81689 3.91217 7.81689 3.86894ZM11.4719 7.1758H14.9155C14.9578 7.1758 15 7.13257 15 7.08934C14.9155 5.64122 14.4509 4.30118 13.7114 3.17726C13.6902 3.13403 13.6479 3.13403 13.606 3.15564C12.9297 3.5663 12.1057 3.91212 11.155 4.17149C11.1128 4.1931 11.0916 4.21472 11.0916 4.25795C11.282 5.1225 11.3875 6.0735 11.4084 7.08934C11.3875 7.13257 11.4297 7.1758 11.4719 7.1758ZM11.0706 10.742C11.2605 9.87749 11.3662 8.92648 11.3875 7.91064C11.3875 7.86742 11.4294 7.82419 11.4717 7.82419H14.8945C14.9368 7.82419 14.979 7.86742 14.979 7.91064C14.9155 9.35876 14.4509 10.6988 13.6902 11.8227C13.6692 11.866 13.627 11.866 13.5845 11.8443C12.9084 11.4337 12.0847 11.0879 11.134 10.8285C11.0918 10.8285 11.0706 10.7853 11.0706 10.742ZM3.52808 7.8242H0.0844727C0.0422363 7.8242 0 7.86743 0 7.91066C0.0844727 9.35878 0.549316 10.6988 1.30981 11.8227C1.33105 11.866 1.37329 11.866 1.41553 11.8444C2.09155 11.4337 2.91553 11.0879 3.86621 10.8285C3.90845 10.8069 3.92969 10.7853 3.92969 10.7421C3.7395 9.8775 3.63379 8.9265 3.61279 7.91066C3.61279 7.86743 3.57056 7.8242 3.52808 7.8242ZM3.92944 4.25797C3.73926 5.12251 3.63379 6.07352 3.61255 7.08936C3.61255 7.13258 3.57031 7.17581 3.54907 7.17581H0.105469C0.0632324 7.17581 0.0209961 7.13258 0.0209961 7.08936C0.0844727 5.64124 0.549072 4.30119 1.30981 3.17728C1.33081 3.13405 1.37305 3.13405 1.41528 3.15565C2.09131 3.56631 2.91528 3.91214 3.86597 4.17151C3.90845 4.17151 3.92944 4.21474 3.92944 4.25797ZM13.1831 2.63693C12.5916 3.00436 11.8311 3.30696 10.9858 3.52309C10.9436 3.54471 10.9014 3.50148 10.9014 3.47986C10.4788 2.01013 9.84497 0.842987 9.08447 0.172974C9.021 0.108124 9.06323 6.10352e-05 9.14795 0.0216675C10.7534 0.389099 12.1689 1.27527 13.2041 2.50725C13.2466 2.55048 13.2253 2.61531 13.1831 2.63693ZM7.09863 7.8242H4.33105C4.28882 7.8242 4.24658 7.86743 4.24658 7.91066C4.26782 8.86166 4.37329 9.76944 4.56348 10.5908C4.56348 10.634 4.60571 10.6556 4.64795 10.6556C5.40845 10.5043 6.23242 10.4178 7.09863 10.3962C7.14087 10.3962 7.18311 10.353 7.18311 10.3098V7.91066C7.18311 7.86743 7.14087 7.8242 7.09863 7.8242ZM9.06348 14.8487C9.84521 14.1787 10.479 13.0115 10.8804 11.5418C10.9016 11.4986 10.9438 11.4553 10.9648 11.4986C11.8101 11.7147 12.5706 12.0173 13.1621 12.3845C13.2043 12.4063 13.2256 12.4712 13.1831 12.5144C12.1479 13.7464 10.7324 14.6326 9.12695 15C9.04224 15 9 14.9135 9.06348 14.8487ZM4.01416 11.477C3.16895 11.6931 2.40845 11.9955 1.81689 12.3632C1.77466 12.3846 1.75342 12.4496 1.79565 12.4926C2.83105 13.7246 4.24634 14.611 5.85205 14.9782C5.93652 15 5.97876 14.892 5.91553 14.8271C5.15503 14.1569 4.521 12.99 4.09863 11.52C4.09863 11.4986 4.0564 11.4552 4.01416 11.477ZM7.81689 10.3098V7.91064C7.81689 7.86742 7.85913 7.82419 7.90137 7.82419H10.6689C10.7112 7.82419 10.7534 7.86742 10.7534 7.91064C10.7112 8.86165 10.6057 9.76942 10.4365 10.5907C10.4365 10.634 10.3943 10.6556 10.3521 10.6556C9.59155 10.5043 8.76758 10.4178 7.90137 10.3962C7.85913 10.3962 7.81689 10.353 7.81689 10.3098ZM7.18311 14.6973V11.1311C7.18311 11.0878 7.14087 11.0448 7.09839 11.0448C6.29565 11.0662 5.53516 11.1529 4.81689 11.2823C4.77466 11.2823 4.73218 11.3472 4.75342 11.3904C5.2605 13.1844 6.10547 14.4812 7.07739 14.7838C7.14087 14.8054 7.18311 14.7622 7.18311 14.6973ZM7.81689 14.6973V11.1311C7.81689 11.0878 7.85913 11.0448 7.90137 11.0448C8.7041 11.0662 9.46484 11.1529 10.1831 11.2823C10.2253 11.2823 10.2676 11.3472 10.2466 11.3904C9.7395 13.2062 8.89429 14.4812 7.92261 14.7838C7.85913 14.8054 7.81689 14.7622 7.81689 14.6973Z"
                      />
                    </svg>
                    Website
                  </span>
                </a>
              </div>
              <div className="coin-info-row-param mr-3">
                <a
                  className="links-color"
                  href="javascript:;"
                  onClick={this._toggleShowCoinModal}
                >
                  <span className="link-img">
                    <svg width="15" height="13" viewBox="0 0 15 13" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ marginTop: '-2px' }}>
                      <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        fillOpacity="0.35"
                        d="M10.5682 3.055C10.5682 3.16284 10.4737 3.25 10.3566 3.25H4.64348C4.52668 3.25 4.43188 3.16284 4.43188 3.055V1.69C4.43188 1.47472 4.62148 1.3 4.85508 1.3H10.1451C10.3787 1.3 10.5682 1.47472 10.5682 1.69V3.055ZM9.36748 7.475H5.6323C5.34573 7.475 5.11353 7.25679 5.11353 6.9875C5.11353 6.7182 5.34573 6.5 5.6323 6.5H9.36748C9.65405 6.5 9.88625 6.7182 9.88625 6.9875C9.88625 7.25679 9.65405 7.475 9.36748 7.475ZM13.3099 3.30159H12.0423C11.9256 3.30159 11.831 3.20935 11.831 3.09524V1.44444C11.831 0.646698 11.1689 0 10.3521 0H4.64789C3.83134 0 3.16901 0.646698 3.16901 1.44444V3.09524C3.16901 3.20935 3.07458 3.30159 2.95775 3.30159H1.69014C0.756761 3.30159 0 4.04073 0 4.95238V11.3492C0 12.2609 0.756761 13 1.69014 13H13.3099C14.2435 13 15 12.2609 15 11.3492V4.95238C15 4.04073 14.2435 3.30159 13.3099 3.30159Z"
                      />
                    </svg>
                    Add To Portfolio
                  </span>
                </a>
              </div>
            </Col>
            <Col xs={6}>
              {this.props.explorers.map((link, ind) => {
                return (
                  <div
                    className="coin-info-row-param text-right text-xl-left"
                    key={ind}
                  >
                    <a className="links-color" href={link} target="_blank">
                      <span className="link-img">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fillOpacity="0.35"
                            d="M8 0C3.58857 0 0 3.58857 0 8C0 12.4114 3.58857 16 8 16C12.4114 16 16 12.4114 16 8C16 3.58857 12.4114 0 8 0ZM11.4152 3.99999C11.3226 4.00171 11.2323 4.02628 11.1506 4.07142C11.1506 4.07142 8.27806 5.66742 7.1712 6.28228V6.28342C6.79863 6.49085 6.4912 6.79828 6.28378 7.17085H6.28263C5.66778 8.27771 4.07178 11.1509 4.07178 11.1509C3.91749 11.4257 4.01578 11.7737 4.2912 11.9286C4.46435 12.0257 4.67635 12.0257 4.84949 11.9286C4.84949 11.9286 7.72263 10.3326 8.82949 9.71771V9.71656C9.20206 9.50914 9.50892 9.20171 9.71635 8.82914H9.71749C10.3323 7.72228 11.9283 4.84914 11.9283 4.84914C12.0826 4.57371 11.9832 4.22571 11.7078 4.07199C11.6181 4.02228 11.5175 3.99771 11.4152 3.99999Z"
                          />
                        </svg>
                        explorer {ind + 1}
                      </span>
                    </a>
                  </div>
                );
              })}
            </Col>
          </Row>
        </div>
        <Modal
          isOpen={this.state.showAddCoinModal}
          toggle={this._toggleShowCoinModal}
        >
          <ModalHeader toggle={this.toggle} key="1">
            Add Transaction
          </ModalHeader>
          <ModalBody>
            <AddCoin
              selected={selected}
              allPortfolios={this.props.portfolios}
              onTransactionSaved={this._toggleShowCoinModal}
            />
          </ModalBody>
        </Modal>
      </div>
    );
  }
}

function mapStateToProps(state) {
  return {
    user: state.auth.user,
    portfolios: state.coins.portfolios,
  };
}

function mapDispatchToProps(dispatch) {
  return {};
}

export default connect(
  mapStateToProps,
  mapDispatchToProps,
)(withRouter(Links));
